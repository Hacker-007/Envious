program -> expressions

expressions -> expression*

expression -> let_expression 
            | function_call_expression
            | if_expression
            | define_expression
            | block_expression
            | equality_expression
            

identifier -> [a-zA-Z][a-zA-Z0-9]*

let_expression -> "let" identifier (":=" expression)?

function_call_expression -> identifier "(" arguments ")"

arguments -> argument ("," argument)*

argument -> expression

if_expression -> "if" expression expression ("else" expression)?

define_expression -> "define" identifier "(" parameters ")" (":" type)? "=" expression

parameters -> parameter ("," parameter)*

parameter -> identifier ":" type

type -> "Int"
      | "Float"
      | "Boolean"
      | "String"

block_expression -> "{" expression* "}"

equality_expression -> term ("=" | "!=" | "<" | ">" | "<=" | ">=") term

term -> factor (("+" | "-") factor)*

factor -> primary (("*" | "/") primary)*

primary -> Int
         | Float
         | Boolean
         | String
         | identifier
         | ("-" | "+") primary
         | "(" expression ")"